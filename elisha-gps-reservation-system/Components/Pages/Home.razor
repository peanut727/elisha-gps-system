@page "/home"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@inject NavigationManager Navigation
@using Microsoft.EntityFrameworkCore

<div class="min-h-screen bg-gray-50 font-jakarta">
    <!-- Hero Section with Background --> 
    <div class="relative overflow-hidden bg-white">
        <div class="absolute inset-0 z-0">
            <div class="absolute inset-0 bg-gradient-to-br from-black/80 via-black/60 to-black/40"></div>
            <img src="Images/headerpic.jpg" 
                 class="w-full h-full object-cover scale-105 transform motion-safe:animate-[kenburns_20s_ease-in-out_infinite] filter brightness-75 blur-[2px]" 
                 alt="Hero background"
                 style="animation: kenburns 20s ease-in-out infinite;">
        </div>
        
        <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-32 text-center">
            <div class="space-y-8 motion-safe:animate-fade-in-down">
                <h1 class="text-4xl md:text-5xl lg:text-6xl font-black text-white mb-6 tracking-tight flex flex-wrap items-center justify-center gap-x-4">
                    <span class="inline-block transform hover:scale-105 transition-transform duration-300">Elisha's</span>
                    <span class="inline-block text-[#f3b755] transform hover:scale-105 transition-transform duration-300">Motorcycle Rental</span>
                    <span class="inline-block text-white/90 transform hover:scale-105 transition-transform duration-300">Bulacan</span>
                </h1>
                <p class="text-3xl md:text-4xl text-white/90 mb-8 max-w-2xl mx-auto drop-shadow-lg motion-safe:animate-fade-in-up font-bold tracking-wide">
                    Ride safe, <span class="text-[#f3b755]">Ride Strong</span>
                    <span class="block text-lg mt-4 text-white/80 font-medium">Your journey begins with us üèçÔ∏è</span>
                </p>
            </div>
            <div class="flex flex-col sm:flex-row justify-center gap-4 motion-safe:animate-fade-in mt-12">
                <a href="/vehicles" 
                   class="group inline-flex items-center px-8 py-4 rounded-full bg-[#f3b755] text-white font-bold text-lg
                          hover:bg-white hover:!text-[#f3b755] transform hover:scale-105 
                          transition-all duration-300 shadow-lg">
                    <span class="transition-colors duration-300">Browse Vehicles</span>
                    <svg class="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-all duration-300" 
                         fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                    </svg>
                </a>
                <a href="/about" 
                   class="group inline-flex items-center px-8 py-4 rounded-full border-2 border-white text-white font-bold text-lg
                          hover:bg-white hover:!text-[#f3b755] transform hover:scale-105
                          transition-all duration-300 shadow-lg backdrop-blur-sm">
                    <span class="transition-colors duration-300">Learn More</span>
                    <i class="fas fa-info-circle ml-2 transform group-hover:rotate-12 transition-all duration-300"></i>
                </a>
            </div>
            <!-- Decorative Elements -->
            <div class="absolute left-1/2 bottom-0 transform -translate-x-1/2 translate-y-1/2 z-20">
                <div class="flex space-x-2">
                    <div class="w-3 h-3 bg-[#f3b755] rounded-full animate-bounce delay-100"></div>
                    <div class="w-3 h-3 bg-white rounded-full animate-bounce delay-200"></div>
                    <div class="w-3 h-3 bg-[#f3b755] rounded-full animate-bounce delay-300"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Featured Section -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        <div class="flex justify-between items-center mb-12">
            <div>
                <h2 class="text-3xl font-bold text-gray-900">Featured Vehicles</h2>
                <p class="text-gray-600 mt-2">Explore our top-rated vehicles</p>
            </div>
            <div class="flex gap-4">
                <button class="p-2 rounded-full bg-gray-100 hover:bg-gray-200 transition-colors duration-300">
                    <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                    </svg>
                </button>
                <button class="p-2 rounded-full bg-gray-100 hover:bg-gray-200 transition-colors duration-300">
                    <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                    </svg>
                </button>
            </div>
        </div>

        <!-- Vehicle Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            @foreach (var vehicle in bikes.Concat(scooters).Concat(cars))
            {
                <div class="group bg-white rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden">
                    <!-- Price Tag -->
                    <div class="relative">
                        <div class="absolute top-4 right-4 z-10">
                            <div class="bg-[#f3b755] backdrop-blur-sm rounded-full px-4 py-2 shadow-lg">
                                <span class="text-white text-2xl font-bold">‚Ç±@vehicle.price_per_day</span>
                                <span class="text-gray-600 text-sm">/day</span>
                            </div>
                        </div>
                        
                        <!-- Image Container -->
                        <div class="h-64 overflow-hidden">
                            <img src="@vehicle.imgsrc" alt="@vehicle.name"
                                 class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500"/>
                        </div>
                    </div>

                    <!-- Content -->
                    <div class="p-6">
                        <!-- Vehicle Type Badge -->
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-[#f3b755]/10 text-[#f3b755] mb-4">
                            @vehicle.type
                        </span>

                        <!-- Title and Rating -->
                        <div class="flex justify-between items-start mb-4">
                            <h3 class="text-xl font-bold text-gray-900">@vehicle.name</h3>
                            <div class="flex items-center">
                                <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                                </svg>
                                <span class="ml-1 text-sm font-medium text-gray-600">@(vehicleRatings.GetValueOrDefault(vehicle.id, 0))</span>
                            </div>
                        </div>

                        <!-- Features Grid -->
                        <div class="grid grid-cols-2 gap-4 mb-6">
                            <div class="flex items-center space-x-2 text-gray-600">
                                <i class="fas fa-users text-[#f3b755]"></i>
                                <span class="text-sm">@vehicle.capacity Seats</span>
                            </div>
                            <div class="flex items-center space-x-2 text-gray-600">
                                <i class="fas fa-gauge text-[#f3b755]"></i>
                                <span class="text-sm">@vehicle.mileage KM/day</span>
                            </div>
                            <div class="flex items-center space-x-2 text-gray-600">
                                <i class="fas fa-cog text-[#f3b755]"></i>
                                <span class="text-sm">@vehicle.transmission</span>
                            </div>
                            <div class="flex items-center space-x-2 text-gray-600">
                                <i class="fas fa-calendar text-[#f3b755]"></i>
                                @if (vehicleAvailability.GetValueOrDefault(vehicle.id, true))
                                {
                                    <span class="text-sm text-green-600">Available Now</span>
                                }
                                else
                                {
                                    <span class="text-sm text-red-600">Reserved Today</span>
                                }
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="flex gap-4">
                            <button @onclick="@(() => NavigateToDetails(vehicle.id))"
                                    class="flex-1 bg-[#f3b755] text-white px-6 py-3 rounded-xl font-bold
                                           hover:bg-[#f3b755]/90 transition-colors duration-300 flex items-center justify-center">
                                Rent Now
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Features Section -->
    <div class="bg-white py-16">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="text-center mb-12">
                <h2 class="text-3xl font-bold text-gray-900 mb-4">Why Choose Us</h2>
                <p class="text-gray-600 max-w-2xl mx-auto">Experience the best car rental service with our premium features</p>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div class="text-center p-6">
                    <div class="w-16 h-16 bg-[#f3b755]/10 rounded-full flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-shield-alt text-2xl text-[#f3b755]"></i>
                    </div>
                    <h3 class="text-xl font-bold text-gray-900 mb-2">100% Secure</h3>
                    <p class="text-gray-600">Your safety is our top priority with comprehensive insurance coverage</p>
                </div>
                <div class="text-center p-6">
                    <div class="w-16 h-16 bg-[#f3b755]/10 rounded-full flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-headset text-2xl text-[#f3b755]"></i>
                    </div>
                    <h3 class="text-xl font-bold text-gray-900 mb-2">Quick Support</h3>
                    <p class="text-gray-600">Dedicated customer service during business hours</p>
                </div>
                <div class="text-center p-6">
                    <div class="w-16 h-16 bg-[#f3b755]/10 rounded-full flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-tag text-2xl text-[#f3b755]"></i>
                    </div>
                    <h3 class="text-xl font-bold text-gray-900 mb-2">Best Prices</h3>
                    <p class="text-gray-600">Competitive rates with no hidden charges</p>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
@@keyframes kenburns {
    0% {
        transform: scale(1.05);
    }
    50% {
        transform: scale(1.15);
    }
    100% {
        transform: scale(1.05);
    }
}

@@keyframes fade-in-down {
    0% {
        opacity: 0;
        transform: translateY(-20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@@keyframes fade-in-up {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@@keyframes fade-in {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

.motion-safe\:animate-fade-in-down {
    animation: fade-in-down 1s ease-out;
}

.motion-safe\:animate-fade-in-up {
    animation: fade-in-up 1s ease-out 0.3s backwards;
}

.motion-safe\:animate-fade-in {
    animation: fade-in 1s ease-out 0.6s backwards;
}
</style>

@code {
    private Dictionary<int, double> vehicleRatings = new();
    private Dictionary<int, bool> vehicleAvailability = new();
    private List<Vehicle> bikes = new List<Vehicle>();
    private List<Vehicle> scooters = new List<Vehicle>();
    private List<Vehicle> cars = new List<Vehicle>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        await LoadVehicles();
        
        // Pre-load all ratings and availability
        foreach (var vehicle in bikes.Concat(scooters).Concat(cars))
        {
            vehicleRatings[vehicle.id] = await GetAverageReviewForVehicle(vehicle.id);
            vehicleAvailability[vehicle.id] = await IsVehicleAvailableToday(vehicle.id);
        }
    }

    private async Task LoadVehicles()
    {
        try
        {
            await using var context = await DbContextFactory.CreateDbContextAsync();
            
            bikes = await context.Vehicles
                .Where(v => v.type == "Big Bike")
                .ToListAsync() ?? new List<Vehicle>();

            scooters = await context.Vehicles
                .Where(v => v.type == "Scooter")
                .ToListAsync() ?? new List<Vehicle>();

            string[] carTypes = new[] { "Sedan", "Van", "Pickup" };
            cars = await context.Vehicles
                .Where(v => carTypes.Contains(v.type))
                .ToListAsync() ?? new List<Vehicle>();

            Console.WriteLine($"Loaded vehicles - Bikes: {bikes.Count}, Scooters: {scooters.Count}, Cars: {cars.Count}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to fetch the vehicles: {ex.Message}");
            Console.WriteLine($"Stack trace: {ex.StackTrace}");
        }
    }

    private async Task<double> GetAverageReviewForVehicle(int vehicleId)
    {
        await using var context = await DbContextFactory.CreateDbContextAsync();
        var reviews = await context.VehicleReviews
            .Where(r => r.VehicleId == vehicleId)
            .ToListAsync();

        return reviews.Any() ? Math.Round(reviews.Average(r => r.Rating), 1) : 0;
    }

    private async Task<bool> IsVehicleAvailableToday(int vehicleId)
    {
        await using var context = await DbContextFactory.CreateDbContextAsync();
        var today = DateOnly.FromDateTime(DateTime.Now);
        
        return !await context.Reservation
            .AnyAsync(r => r.VehicleId == vehicleId && 
                          DateOnly.FromDateTime(r.StartDate) <= today && 
                          DateOnly.FromDateTime(r.EndDate) >= today);
    }

    private void NavigateToDetails(int vehicleId)
    {
        Navigation.NavigateTo($"/details/{vehicleId}", forceLoad: true);
    }
}